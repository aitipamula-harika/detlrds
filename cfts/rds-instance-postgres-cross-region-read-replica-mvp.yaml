AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Description": "AWS CloudFormation  Template for creating an Amazon RDS PostgreSQL cross region read replica  environment.
  

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'PostgreSQL Database details & credentials'
      Parameters:
      - Environment
      - SourceDBInstanceName
      - SourceRegion
      - RDSInstanceSubnetSSMParameter
      - RDSSubnetGroupSubnet1SSMParameter
      - RDSSubnetGroupSubnet2SSMParameter
      - RDSSubnetGroupSubnet3SSMParameter
      - Blockcode
      - DBNumber
      - DBNumberSuffix
      - EngineVersion
    - Label:
        default: 'AWS RDS PostgreSQL Parameters'
      Parameters:
      - EnablePerformanceInsights
      - EnhancedMonitoringInterval
      - PerformanceInsightsRetentionPeriod
      - DBInstanceClass
      - StorageType
      - Iops
      - DBAllocatedStorage
      - MaxAllocatedStorage
      - ReplicaNumber
      - LogRetention
      - DefinedMaintenanceWindow
      - DeltaPrivateNetworkPrefix
          
    - Label:
        default: 'AWS RDS Tagging Parameters'
      Parameters:
      - costCenterParameter
      - uniqueIDParameter
      - dataClassificationParameter
      - supportGroupParameter
      - changeGroupParameter
      - drTierParameter
      - pciIndicator
      - soxIndicator
      - cuiIndicator
      - phiIndicator
      - appSupportEmail 
    - Label:
       default: 'AWS RDS Monitoring Parameters'
      Parameters:
      - CreateAlarms
      - logMetricNamespace
      - DBLoadCpuAlarmTheshold
      - FreeableMemoryAlarmTheshold
      - FreeStorageSpaceAlarmTheshold
      - DatabaseConnectionsAlarmTheshold
      - ReplicaLagAlarmTheshold
      - SnowSNSTopic
    
    ParameterLabels:
      EngineVersion:
        default: "PostgreSQL Engine version for database:"

Parameters:
  Blockcode:
    Type: String
    Description: Enter the 10 character Blockcode (in lowercase) for this RDS instance
    AllowedPattern: ^[a-z0-9]{10}$
    ConstraintDescription: The Blockcode must entered in lowercase and must be 10 characters log
    
  SourceDBInstanceName:
    Type: String
    Description: This should be the SourceDatabaseInstanceIdentifier name for which cross-region replica is being created.
    
  SourceRegion:
    Type: String
    Description: This should be the region where the Source Database is created.
    AllowedValues: ['us-east-1','us-west-2']
    
  DBInstanceClass:
    Description: The  DB instance class same as Source DB Instance Instance class. 
    Type: String
    AllowedValues: ['db.m5.large','db.m5.xlarge','db.m5.2xlarge','db.m5.4xlarge','db.r5.large','db.r5.xlarge','db.r5.2xlarge','db.t3.medium','db.t3.large','db.t3.xlarge','db.t3.2xlarge','db.m5.large','db.m5.xlarge','db.m5.2xlarge','db.m5.4xlarge','db.m5.12xlarge','db.m5.24xlarge','db.r5.large','db.r5.xlarge','db.r5.2xlarge','db.r5.4xlarge','db.r5.8xlarge','db.r5.12xlarge','db.r5.16xlarge','db.r5.24xlarge']
    ConstraintDescription: Must select a valid DB instance type.
    
  StorageType:
    Type: String
    Description: The storage type must be same as that of Source Database Instance . 
    AllowedValues: ['gp2','io1']
    
  DBNumber:
    Type: String
    Description: Fo Cross Region Read replica ensure  has same DBnumber as the Source database
    AllowedPattern: ^[0-9]{2}$
    ConstraintDescription: The DBNumber must be 2 characters long
    
  RDSInstanceSubnetSSMParameter:
    Type: String
    Description: The name of the SSM parameter which holds a pointer to the first subnet in which the lambda function should run.  Migration Account should use /delta/vpc/datasubnet1aid OR /delta/vpc/datasubnet2aid OR datasubnet3aid and other dev accounts should use privatesubnet1aid
    AllowedValues: ["datasubnet1aid","datasubnet1bid","datasubnet1cid", "privatesubnet1aid","privatesubnet2aid","privatesubnet3aid"]
    Default: datasubnet1aid
  RDSSubnetGroupSubnet1SSMParameter:
    Type: String
    Description: The name of the SSM parameter which holds a pointer to the first DB Subnet
    AllowedValues: ["datasubnet1aid","datasubnet1bid","datasubnet1cid", "privatesubnet1aid","privatesubnet2aid","privatesubnet3aid"]
    Default: datasubnet1aid
  RDSSubnetGroupSubnet2SSMParameter:
    Type: String
    Description: The name of the SSM parameter which holds a pointer to the second DB Subnet
    AllowedValues: ["datasubnet1aid","datasubnet1bid","datasubnet1cid", "privatesubnet1aid","privatesubnet2aid","privatesubnet3aid"]
    Default: datasubnet1bid
  RDSSubnetGroupSubnet3SSMParameter:
    Type: String
    Description: The name of the SSM parameter which holds a pointer to the third DB Subnet
    AllowedValues: ["datasubnet1aid","datasubnet1bid","datasubnet1cid", "privatesubnet1aid","privatesubnet2aid","privatesubnet3aid"]
    Default: datasubnet1cid
  EngineVersion:
    Description: 'PostgreSQL version.'
    Type: String
    Default: '14.4'
    AllowedValues: ['14.4','14.3','14.2','14.1']
  Iops:
    Type: Number
    Description: The number of I/O operations per second (IOPS) that the database provisions. The value must be equal to or greater than 1000 and less than 80000.  This parameter is only applicable if the storage type is io1.
    Default: 3000
    MinValue: 1000
    MaxValue: 80000
    Default: 1000
  DBAllocatedStorage:
    Type: Number
    Default: 100
    Description: The initial size of the database (GiB).  The minimum for gp2 storage is 20GB and the minimum for io1 storage is 100 GB.
    MinValue: 20
    MaxValue: 16384
    ConstraintDescription: must be between 20 and 65536 GiB.
    Default: 100
  MaxAllocatedStorage:
    Type: Number
    Default: '1000'
    Description: The maximum size in GB that this RDS instance can auto-scale to.  This number has to be greater than the initial allocated storage size and less than 65536 GB.
    MinValue: 21
    MaxValue: 65536
  ReplicaLagAlarmTheshold: 
    Type: Number
    Description: This Alarm is to alert on Replication Lag for the Read Replica. 5mins is a default value.
    Default: 300  
  DefinedMaintenanceWindow:
    Description: The weekly time range (in UTC) during which system maintenance can occur.
    Type: String
    Default: 'sat:07:00-sat:07:30'
  costCenterParameter:
    Description: The value for the costCenter tag .
    Type: String
    
  uniqueIDParameter:
    Description: The value for the uniqueID tag
    Type: String
    
  dataClassificationParameter:
    Description: The value for the dataClassificationParameter tag
    Type: String
    AllowedValues: ['internal', 'public', 'confidential', 'restricted']
    Default: internal
  supportGroupParameter:
    Description: Enter a value only if this is Cloud Native (Containerize/Modernize) AWS account. Migrate accounts will use default values.
    Type: String
    Default: DBA - Oracle Support
  changeGroupParameter:
    Description: Enter a value only if this is Cloud Native (Containerize/Modernize) AWS account. Migrate accounts will use default values.
    Type: String
    Default: DBA - Oracle Support
  Environment:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /delta/account/environment:1
  DeltaPrivateNetworkPrefix:
    Type: String
    Description: For Migrate Accounts use one of the following. Prefix list ending with ...082 is for Region1 and ....377f is for Region2  For Containerize will need input from VPC managed prefix lists.
    AllowedValues: ['pl-05a3c87e010904082','pl-0f41ed4a1130c377f']
  DBNumber:
    Type: String
    Description: Fo Cross Region Read replica ensure the first replica has same number as the Source database
    AllowedPattern: ^[0-9]{2}$
    ConstraintDescription: The DBNumber must be 2 characters long
    
  DBNumberSuffix:
    Type: String
    Description: Fo Cross Region Read replica ensure the first replica has same number as the Source database
    AllowedPattern: ^[0-9]{2}$
    ConstraintDescription: The DBNumber must be 2 characters long
    
  
  
  EnhancedMonitoringInterval:
    Type: Number
    Description: The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.  To disable colecting Enhanced Monitoring metrics you should specify 0.
    AllowedValues: [0,1,5,10,15,30,60]
    Default: 60
  EnablePerformanceInsights:
    Description: 'A flag (true/false) which indicates whether or not performance insights should be enabled on the RDS instance.'
    Type: String
    Default: true
    AllowedValues: ['true', 'false']
  LogRetention:
    Type: Number
    Description: The length of time (in days) that you wish CloudWatch to retain the RDS logs for. May want to  keep it same as Source DB.
    Default: 60
    AllowedValues: [1,3,5,7,14,30,60,90,120,150,180,365,400,545,731,1827,3653]
  drTierParameter:
    Type: String
    Description: This must be same as the Source Database Tag value.
    AllowedValues: ['MV', 'MC', 'BC', 'BE', 'B']
    
  pciIndicator:
    Type: String
    Description: The value for the appCritiality tag.
    AllowedValues: ['true', 'false']
    
  soxIndicator:
    Type: String
    Description: The value for the appCritiality tag.
    AllowedValues: ['true', 'false']
    
  cuiIndicator:
    Type: String
    Description: The value for the appCritiality tag.
    AllowedValues: ['true', 'false']
    
  phiIndicator:
    Type: String
    Description: The value for the appCritiality tag.
    AllowedValues: ['true', 'false']
    
  appSupportEmail:
    Type: String
    Description: The Application support group email or mailbox
  PerformanceInsightsRetentionPeriod:
    Type: Number
    Description: The amount of time, in days, to retain Performance Insights data.  Valid values are 7 days (1 week) or 731 days (2 years).
    Default: 7
    AllowedValues: [7,731]
  CreateAlarms:  
    Type: String
    Description: Only Applicable to Migrate accounts. Please set to True if you want to create alarms along with RDS Instance. For SI/Prod database it will created alarms irrespective parameter value. 
    AllowedValues: ['true', 'false']
    Default: false
  logMetricNamespace:
    Type: String
    Description: The name of log metric namespace. Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore.  
    Default: RdsLogMetrics
  DBLoadCpuAlarmTheshold:
    Type: Number
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Please enter threshold for DbLoadCpu. Ideally it shoule be set value = number of VCPUs allocated RDS instance based on Instance Type + 1. Refer https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#Concepts.DBInstanceClass.Summary for more info.
    Default: 90
  FreeableMemoryAlarmTheshold:
    Type: Number
    Default: 100000000 
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Please enter threshold for free Space below which you would like to get Alarm. Default is set to 100MB=100000000  in bytes. 
  FreeStorageSpaceAlarmTheshold:
    Type: Number
    Default: 4000000000 
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Please enter threshold for free Space below which you would like to get Alarm. Default is set to 4 GB=4000000000   in bytes. 
  
  DatabaseConnectionsAlarmTheshold:
    Type: Number
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Please set this value to 95% of max connections set for instance. Max Connections value is set based on type of instance. Please refer documentation https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.MaxConnections
    Default: 90
  MaxUsedTransactionIDsAlarmTheshold:
    Type: Number
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Threshold for receiving early warning for transaction ID Wraparound. Default is 1000000000. Please decrease it if you want to be more aggressive. 
    Default: 1000000000
  SnowSNSTopic:
    Type: String
    Default: RDS-Alerts-All
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. The SNS Topic for sending alarms to lambda to forward it further to snow. Default should work in all cases.  
  InvokePostLambda:
    Type: String
    Description: To call lambda after db instance creation
    AllowedValues: ['true', 'false']
    Default: false
  PostScriptBucketName:
    Type: String
    Description: The name of the s3 bucket, to fetch scripts
    Default: delta-postcfg-artifacts-us-east-1
  PostShellScriptPath:
    Type: String
    Description: The name of the shell script should be executed after RDS instance creation
    Default: database/scripts/post-postgress-script.sh
  PostSqlScriptPath:
    Type: String
    Description: The name of the SQL script should be executed after RDS instance creation
    Default: database/scripts/sql-postgres-script.sql
Mappings:
  AZMap:
    privatesubnet1aid:
      "az": "us-west-2a"
    privatesubnet2aid:
      "az": "us-west-2b"
    privatesubnet3aid:
      "az": "us-west-2c"
    datasubnet1aid:
      "az": "us-west-2a"
    datasubnet1bid:
      "az": "us-west-2b"
    datasubnet1cid:
      "az": "us-west-2c"
  EnvironmentMap:
    sandbox:
      "abbreviation": "l"
      "shortname": "sbx"
    development:
      "abbreviation": "d"
      "shortname": "dev"
    systems-integration:
      "abbreviation": "i"
      "shortname": "si"
    production:
      "abbreviation": "p"
      "shortname": "prd"
  RegionMap:
    us-east-1:
      "abbreviation": "e"
      "shortname": "NV"
    us-west-2:
      "abbreviation": "w"
      "shortname": "OR"

Conditions:
  EnhancedMonitoringDisabled: !Equals
    - !Ref EnhancedMonitoringInterval
    - 0
  PeformanceInsightsDisabled: !Equals
    - !Ref EnablePerformanceInsights
    - false
  EnhancedMonitoringEnabled: !Not
    - Condition: EnhancedMonitoringDisabled
  isGP2: !Equals
    - !Ref StorageType
    - 'gp2'
  isDevelopmentAccount: !Equals
    - !Ref Environment
    - development
  isSIorPRDAccount: !Not
    - Condition: isDevelopmentAccount

  isInvokePostLambda: !Equals
    - !Ref InvokePostLambda
    - 'true'

#Following conditions ensure that we create alarms only for migrate accounts and not for containarize
  isCreateAlarm: !Equals
    - !Ref CreateAlarms
    - 'true'
  isDevMigrate: !Equals
    - !Ref AWS::AccountId
    - 108101204381
  isSiMigrate: !Equals
    - !Ref AWS::AccountId
    - 934408279768
  isPrdMigrate: !Equals
    - !Ref AWS::AccountId
    - 022190431571  
  #Air4 Accounts
  isSiVsMigrate: !Equals
    - !Ref AWS::AccountId
    - 665733732159
  isPrdVsMigrate: !Equals
    - !Ref AWS::AccountId
    - 107371347474

  #Endevour Accounts
  isDev9eMigrate: !Equals
    - !Ref AWS::AccountId
    - 012898326796
  isSi9eMigrate: !Equals
    - !Ref AWS::AccountId
    - 356731337321
  isPrd9eMigrate: !Equals
    - !Ref AWS::AccountId
    - 262358483542

  isMigrate: !Or
    - Condition: isDevMigrate
    - Condition: isSiMigrate
    - Condition: isPrdMigrate
    - Condition: isSiVsMigrate
    - Condition: isPrdVsMigrate
    - Condition: isDev9eMigrate
    - Condition: isSi9eMigrate
    - Condition: isPrd9eMigrate
    
  isMigrateSiPrd: !And
    - Condition: isSIorPRDAccount
    - Condition: isMigrate 

  isMigrateDevCreateAlarm: !And
    - Condition: isDevMigrate
    - Condition: isCreateAlarm

  isMigisSIorPRDAccountisCreateAlarm: !Or
    - Condition: isMigrateSiPrd
    - Condition: isMigrateDevCreateAlarm
  # dataClassification: internal or confidential a CMK to be generated for each RDSKey  ( rds-<blockcode>-CMK )
  # dataClassification: restricted a CloudHSM key to be created outside of CFT
  # dataClassification: public – Default AWS RDS key 

  InternaldataClassification: !Equals [!Ref dataClassificationParameter, 'internal']
  ConfidentialdataClassification: !Equals [!Ref dataClassificationParameter, 'confidential']
  PublicdataClassification: !Equals [!Ref dataClassificationParameter, 'public']
  RestricteddataClassification: !Equals [!Ref dataClassificationParameter, 'restricted']
  
 
Resources: 
  # The following resource creates a cloudwatch log group where the postgresql logs for postgresql will be stored
  # This resource is required in order to specify the retention length that should be used by CloudWatch
  postgresqlCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub
        - /aws/rds/instance/pgs-${Blockcode}-${reg}-${DBNumber}/postgresql
        - {
          reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"]
          }
      RetentionInDays: !Ref LogRetention
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: confidential
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail      

  # The following resource creates a cloudwatch log group where the general logs for PostgreSQL will be stored
  # This resource is required in order to specify the retention length that should be used by CloudWatch
  upgradeCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub
        - /aws/rds/instance/pgs-${Blockcode}-${reg}-${DBNumber}/upgrade
        - {
          reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"]
          }
      RetentionInDays: !Ref LogRetention
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: confidential
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail

  # The resource below creates a new IAM role which is used for enhanced monitoring.
  # This role will only get created if the parameter for this stack specifies enabling enhanced monitoring
  EnhancedMonitoringRole:
    Condition: EnhancedMonitoringEnabled
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'delegate-admin-postgresql-monitoring-role-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - monitoring.rds.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      PermissionsBoundary:
        Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/cft-developer-boundary-policy
  
   
  # The resource below creates an EC2 Security Group which is then used when creating the RDS DB Instance.
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'postgresql EC2 Security Group for ${Blockcode}'
      SecurityGroupIngress:
      - IpProtocol: tcp
        Description: This ingress rule allows Prefix list  to communicate correctly over port 5432
        SourcePrefixListId: !Ref DeltaPrivateNetworkPrefix
        FromPort: 5432
        ToPort: 5432
      VpcId: '{{resolve:ssm:/delta/vpc/vpcid:1}}'
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - ${reg}-${env}-${os}${tier}-${Blockcode}
           -  {
              reg:  !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"],
              env:  !FindInMap [EnvironmentMap, !Ref Environment, "abbreviation"],
              os: 'L',     # L|W     L=LINUX,W=Windows
              tier: 'D'   # W|A|D   W=Web,A=App,D=Database
              }
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: engineVersion
          Value: !Sub "postgresql-${EngineVersion}"
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: drTier
          Value: !Ref drTierParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail
  # The resource below creates a DB Subnet Group that is used when creating the RDS DB Instance.
  # The DB Subnet Group utilizes the current accounts subnets which are specified inside SSM parameters.
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB subnet group
      SubnetIds:
        - !Sub '{{resolve:ssm:/delta/vpc/${RDSSubnetGroupSubnet1SSMParameter}:1}}'
        - !Sub '{{resolve:ssm:/delta/vpc/${RDSSubnetGroupSubnet2SSMParameter}:1}}'
        - !Sub '{{resolve:ssm:/delta/vpc/${RDSSubnetGroupSubnet3SSMParameter}:1}}'
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: drTier
          Value: !Ref drTierParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail 
  # The resource below creates an postgresql Parameter Group that is used when creating the RDS DB Instance.
  DBParameterGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties:
      Description: !Sub 'PostgreSQL Parameter Group for ${Blockcode}'
      Family: postgres14
      Tags:
        - Key: Name
          Value: delta-postgres-14
      Parameters:
        rds.force_ssl: 1
        log_min_duration_statement: 250
        ssl_min_protocol_version: TLSv1.2
        shared_preload_libraries: pg_stat_statements,pg_cron
        track_activity_query_size: 4096
        pg_stat_statements.track: ALL
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: engineVersion
          Value: !Sub "postgres-${EngineVersion}"
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: drTier
          Value: !Ref drTierParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail
 
  CMKforRDS:
    Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
    Properties:
      ProductName: "KMS CMK"
      ProvisionedProductName: !Sub 
        - pgs-${Blockcode}-${env}-${reg}-${DBNumber}-rds-cmk
        - {
          env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"],
          reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"]
          }
      ProvisioningArtifactName: "2.0"
      ProvisioningParameters:
        - Key: KEYNAME
          Value: !Sub 
            - pgs-${Blockcode}-${env}-${reg}-${DBNumber}-rds-cmk
            - {
              env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"],
              reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"]
              } 
        - Key: KEYACCESS1
          Value: DeveloperPowerUserProvisioner
        - Key: KEY1PERMISSIONS
          Value: Both
        - Key: KEYACCESS2
          Value: DBAOperator
        - Key: KEY2PERMISSIONS
          Value: Decrypt
        - Key: SERVICENAME
          Value: ""
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
     
   # The resource below creates a cross-region read replica.
  CrossRegionReplicaInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage 
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBInstanceClass: !Ref DBInstanceClass
      VPCSecurityGroups:
        - !Ref EC2SecurityGroup
      DBInstanceIdentifier: !Sub 
         - pgs-${Blockcode}-${env}-${reg}-${DBNumber}
         - {
           reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"],
           env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
           }
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBParameterGroupName: !Ref DBParameterGroup
      DeletionProtection: true
      CopyTagsToSnapshot: true
      EnablePerformanceInsights: !Ref EnablePerformanceInsights
      EnableCloudwatchLogsExports:
        - postgresql
        - upgrade
      KmsKeyId: !GetAtt 'CMKforRDS.Outputs.CMKARN'
      Iops: !If [isGP2, !Ref AWS::NoValue, !Ref Iops]
      StorageEncrypted: true
      SourceDBInstanceIdentifier: !Sub arn:aws:rds:${SourceRegion}:${AWS::AccountId}:db:${SourceDBInstanceName}
      MaxAllocatedStorage: !Ref MaxAllocatedStorage
      MonitoringInterval: !If [EnhancedMonitoringDisabled, !Ref AWS::NoValue, !Ref EnhancedMonitoringInterval]
      MonitoringRoleArn: !If [EnhancedMonitoringDisabled, !Ref AWS::NoValue, !GetAtt EnhancedMonitoringRole.Arn]
      MultiAZ: !If [isDevelopmentAccount, false, true]
      PreferredMaintenanceWindow: !Ref DefinedMaintenanceWindow
      PerformanceInsightsKMSKeyId: !GetAtt CMKforRDS.Outputs.CMKARN
      StorageType: !Ref StorageType
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: drTier
          Value: !Ref drTierParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail
  # The Route53 recordset below creates a friendly CName which points to the default RDS DNS endpoint.
  # Clients can use this friendly name when communicating with the RDS instance.
  RouteRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: '{{resolve:ssm:/delta/r53/hostedzoneid:1}}'
      Name: !Sub
        - "pgs-${Blockcode}-${reg}-${DBNumber}.${hostedzonedomain}"
        - {
          reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"], 
          hostedzonedomain: '{{resolve:ssm:/delta/r53/hostedzonename:1}}'
          }
      Type: CNAME
      TTL: '300'
      ResourceRecords:
      - !GetAtt CrossRegionReplicaInstance.Endpoint.Address
    DependsOn: CrossRegionReplicaInstance
   
  ###### Monitoring ######
  #################### Metric Filters and Metrics #######################################
  # Following is list of all metric filters we need before creating alarms. 
  # Each Metric filter creates a metric which then can be utilized while createing alarms. 
  
  # This Metric filter will  search for pattern {FATAL - "password authentication failed for user" - "no pg_hba.conf entry for host"}  in
  # Postgres database error log and create corresponding metric
  FilterFatalPgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      FilterPattern:  FATAL - "password authentication failed for user" - "no pg_hba.conf entry for host"
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
          }

  # This Metric filter will search for pattern {No space left on device}  in Postgres error log and create corresponding metric
  FilterSpacePgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm  
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      FilterPattern:  No space left on device
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
          }

  # This Metric filter will  search for pattern {out of memory}  in Postgres error log and create corresponding metric
  FilterOomPgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      FilterPattern:  out of memory
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
          }

  # This Metric filter will  search for pattern {server terminated}  in Postgres error log and create corresponding metric
  FilterServertermPgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      FilterPattern:  server terminated
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
          }

  # This Metric filter will  search for pattern {PANIC}  in Postgres error log and create corresponding metric
  FilterPanicPgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      FilterPattern:  PANIC
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
          }

  #################### END Metric Filters ################
  #################### Alarms  #######################################
 
  # Following alarm utilizes all metrics created above for posgres error logs based metric
  DbAlertAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres  # this topic points to DBA emails. 
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmDescription: Alarm which triggers when there are errors in database log
      AlarmName: !Sub 
      - "RDSdblogalerts-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: !Sub 
      - "dblogalerts-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }      
      Namespace: !Ref logMetricNamespace
      Period: 60
      Statistic: Sum
      Threshold: 0.0
      TreatMissingData: notBreaching

  # Following alarm utilizes cloudwatch DatabaseConnections metric and triggers when it is greater than threshold
  DatabaseConnectionsAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSDatabaseConnections-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 5
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref DatabaseConnectionsAlarmTheshold
      TreatMissingData: ignore

  # Following alarm utilizes cloudwatch CPUUtilization metric and triggers when it is greater than threshold
  CPUUtilizationAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSCPUUtilization-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 5
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: 90
      TreatMissingData: ignore

  # Following alarm utilizes cloudwatch MaximumUsedTransactionIDs metric and triggers when it is greater than threshold
  MaxUsedTransactionIDsAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm
    Type: AWS::CloudWatch::Alarm     
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSMaxUsedTransactionIDs-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 1
      MetricName: MaximumUsedTransactionIDs
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref MaxUsedTransactionIDsAlarmTheshold
      TreatMissingData: ignore  

  # Following alarm utilizes cloudwatch ReadLatency metric and triggers when it is greater than threshold
  ReadLatencyAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      AlarmName: !Sub 
      - "RDSReadLatency-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }      
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 5
      MetricName: ReadLatency
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: 250
      TreatMissingData: ignore

  # Following alarm utilizes cloudwatch WriteLatency metric and triggers when it is greater than threshold
  WriteLatencyAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      AlarmName: !Sub 
      - "RDSWriteLatency-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }            
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 5
      MetricName: WriteLatency
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: 250
      TreatMissingData: ignore

  # DbLoadCpu is supposed to be less than 1 + NumCpus. This alarm triggers when Dbload is greater than NumCpus 
  DBLoadCpuAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSDBLoadCpu-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        } 
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 5
      MetricName: DBLoadCPU
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref DBLoadCpuAlarmTheshold
      TreatMissingData: ignore

  ## Following alarm utilizes cloudwatch FreeStorageSpace metric. This alarm triggers when FreeStorageSpace is less than 10% of maxallocated
  FreeStorageSpaceAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSFreeStorageSpace-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }       
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 5
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref FreeStorageSpaceAlarmTheshold  
      TreatMissingData: ignore

  # FreeableMemory is supposed to be greater than at least 100MB . This alarm triggers when FreeableMemory is less than Threshold
  FreeMemoryAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmDescription: Alarm to send alert when free memory is less than 100 MB 
      AlarmName: !Sub 
      - "RDSFreeMemory-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }       
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 5
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref FreeableMemoryAlarmTheshold  
      TreatMissingData: ignore

  # ReplicaLagAlarm is triggered when the ReplicaLag is greather than 300 secs.
  ReplicaLagAlarm:
    Condition: isCreateAlarm
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions: 
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Oracle
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmDescription: Alarm to send alert when replicationlag is greater than 5 mins 
      AlarmName: !Sub 
      - "ReplicaLagAlarm-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref CrossRegionReplicaInstance
        }       
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref CrossRegionReplicaInstance
      EvaluationPeriods: 8
      MetricName: ReplicaLag
      Namespace: AWS/RDS
      Period: 300
      Statistic: Average
      Threshold: !Ref ReplicaLagAlarmTheshold  
      TreatMissingData: ignore
  #################### End Cloudwatch Alarms  #######################################
      
Outputs:
  SecurityGroup:
    Description: The RDS Security Group ID
    Value: !Ref EC2SecurityGroup

  CName:
    Description: The RDS CNAME
    Value: !Ref RouteRecordSet
    
  DatabaseInstanceIdentifierName:
    Description: The RDS DB Instance Name
    Value: !Ref CrossRegionReplicaInstance
  
  JDBConnectionString:
    Description: JDBC connection string for the database
    Value: !Sub
      - jdbc:postgresql://${myendpoint}:${myport}/pgs_${Blockcode}_${env}${DBNumber}_${DBNumberSuffix}
      - {
        myendpoint: !Ref RouteRecordSet,
        myport: !GetAtt CrossRegionReplicaInstance.Endpoint.Port,
        env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
        }
    Export:
     Name:
      !Sub ${AWS::StackName}-JDBCConnectionString
    