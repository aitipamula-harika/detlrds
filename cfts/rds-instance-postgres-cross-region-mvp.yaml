AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Description": "AWS CloudFormation  Template for creating an Amazon RDS DB instance environment.
  

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Postgres Database details & credentials'
      Parameters:
      - Environment
      - SourceDBInstanceName
      - SourceRegion
      - RDSInstanceSubnetSSMParameter
      - RDSSubnetGroupSubnet1SSMParameter
      - RDSSubnetGroupSubnet2SSMParameter
      - RDSSubnetGroupSubnet3SSMParameter
      - Blockcode
      - Product
      - DBNumber
      - DBNumberSuffix
      - EngineVersion
    - Label:
        default: 'AWS RDS Postgres Parameters'
      Parameters:
      - EnablePerformanceInsights
      - EnhancedMonitoringInterval
      - PerformanceInsightsRetentionPeriod
      - DBInstanceClass
      - StorageType
      - Iops
      - Timezone
      - DatabaseCharacterSet
      - DBAllocatedStorage
      - MaxAllocatedStorage
      - LogRetention
      - DBOptionGroupName
      - DBBackupRetentionPeriod
      - DefinedMaintenanceWindow
      - DefinedBackupWindow
      - EnableReadReplica 
      - DeltaPrivatePrefixList     
    - Label:
        default: 'AWS RDS Tagging Parameters'
      Parameters:
      - costCenterParameter
      - uniqueIDParameter
      - dataClassificationParameter
      - supportGroupParameter
      - changeGroupParameter
      - appCriticalityParameter
      - pciIndicator
      - soxIndicator
      - cuiIndicator
      - phiIndicator
      - appSupportEmail 
    - Label:
       default: 'AWS RDS Monitoring Parameters'
      Parameters:
      - CreateAlarms
      - logMetricNamespace
      - DBLoadCpuAlarmTheshold
      - FreeableMemoryAlarmTheshold
      - FreeStorageSpaceAlarmTheshold
      - DatabaseConnectionsAlarmTheshold
      - SnowSNSTopic
    - Label:
       default: 'AWS Lambda Parameters'
      Parameters:
      - InvokePostLambda
      - PostScriptBucketName
      - PostShellScriptPath
      - PostSqlScriptPath

    ParameterLabels:
      EngineVersion:
        default: "Postgres Engine version for database:"

Parameters:
  
  Blockcode:
    Type: String
    Description: Enter the 10 character Blockcode (in lowercase) for this RDS instance
    AllowedPattern: ^[a-z0-9]{10}$
    ConstraintDescription: The Blockcode must entered in lowercase and must be 10 characters long
    
  DBNumber:
    Type: String
    Description: Enter the 2 digit database number for this RDS instance
    Default: "01"
    AllowedPattern: ^[0-9]{2}$
    ConstraintDescription: The DBNumber must be 2 characters long
    
  DBNumberSuffix:
    Type: String
    Description: Enter the 2 digit number for the default Database Name
    Default: "01"
    AllowedPattern: ^[0-9]{2}$
    ConstraintDescription: The DBNumberSuffix must be 2 characters long
    
  DBInstanceClass:
    Description: DB instance class. For Burstable please pick one of t3
    Type: String
    AllowedValues: ['db.m5.large','db.m5.xlarge','db.m5.2xlarge','db.m5.4xlarge','db.r5.large','db.r5.xlarge','db.r5.2xlarge','db.t3.medium','db.t3.large','db.t3.xlarge','db.t3.2xlarge','db.m5.large','db.m5.xlarge','db.m5.2xlarge','db.m5.4xlarge','db.m5.12xlarge','db.m5.24xlarge','db.r5.large','db.r5.xlarge','db.r5.2xlarge','db.r5.4xlarge','db.r5.8xlarge','db.r5.12xlarge','db.r5.16xlarge','db.r5.24xlarge']
    ConstraintDescription: Must select a valid DB instance type.
    
  StorageType:
    Type: String
    Description: Specifies the storage type to be associated with the DB instance. General Purpose SSD (gp2), or Provisioned IOPS SSD (io1)
    AllowedValues: ['gp2','io1']
    
  Timezone:
    Description: This is Database Timezone value. For migrate ensure this is same as the Source databases. EST- America/New_York, MST-America/Denver, CST- America/Chicago , PST- America/Los_Angeles
    Type: String
    Default: UTC
    AllowedValues: ['America/New_York','America/Chicago','America/Denver','America/Los_Angeles','UTC']
  RDSInstanceSubnetSSMParameter:
    Type: String
    Description: The name of the SSM parameter which holds a pointer to the first subnet in which the lambda function should run.  Migration Account should use /delta/vpc/datasubnet1aid OR /delta/vpc/datasubnet2aid OR datasubnet3aid and other dev accounts should use privatesubnet1aid
    AllowedValues: ["datasubnet1aid","datasubnet1bid","datasubnet1cid", "privatesubnet1aid","privatesubnet2aid","privatesubnet3aid"]
    Default: datasubnet1aid
  RDSSubnetGroupSubnet1SSMParameter:
    Type: String
    Description: The name of the SSM parameter which holds a pointer to the first DB Subnet
    AllowedValues: ["datasubnet1aid","datasubnet1bid","datasubnet1cid", "privatesubnet1aid","privatesubnet2aid","privatesubnet3aid"]
    Default: datasubnet1aid
  RDSSubnetGroupSubnet2SSMParameter:
    Type: String
    Description: The name of the SSM parameter which holds a pointer to the second DB Subnet
    AllowedValues: ["datasubnet1aid","datasubnet1bid","datasubnet1cid", "privatesubnet1aid","privatesubnet2aid","privatesubnet3aid"]
    Default: datasubnet1bid
  RDSSubnetGroupSubnet3SSMParameter:
    Type: String
    Description: The name of the SSM parameter which holds a pointer to the third DB Subnet
    AllowedValues: ["datasubnet1aid","datasubnet1bid","datasubnet1cid", "privatesubnet1aid","privatesubnet2aid","privatesubnet3aid"]
    Default: datasubnet1cid
  Iops:
    Type: Number
    Description: The number of I/O operations per second (IOPS) that the database provisions. The value must be equal to or greater than 1000 and less than 80000.  This parameter is only applicable if the storage type is io1.
    Default: 3000
    MinValue: 1000
    MaxValue: 80000
    Default: 1000
  DBAllocatedStorage:
    Type: Number
    Default: 100
    Description: The initial size of the database (GiB).  The minimum for gp2 storage is 20GB and the minimum for io1 storage is 100 GB.
    MinValue: 20
    MaxValue: 16384
    ConstraintDescription: must be between 20 and 65536 GiB.
    
  MaxAllocatedStorage:
    Type: Number
    Default: '1000'
    Description: The maximum size in GB that this RDS instance can auto-scale to.  This number has to be greater than the initial allocated storage size and less than 16384 GB.
    MinValue: 21
    MaxValue: 16384
  EngineVersion:
    Description: 'PostgreSQL version.'
    Type: String
    Default: '14.4'
    AllowedValues: ['14.4','14.3','14.2','14.1']
  EnablePerformanceInsights:
    Description: 'A flag (true/false) which indicates whether or not performance insights should be enabled on the RDS instance.'
    Type: String
    Default: true
    AllowedValues: ['true', 'false']
  DefinedBackupWindow:
    Description: 'The daily time range in UTC during which you want to create automated backups.'
    Type: String
    Default: '09:54-10:24'
  DefinedMaintenanceWindow:
    Description: The weekly time range (in UTC) during which system maintenance can occur.
    Type: String
    Default: 'sat:07:00-sat:07:30'
  DBBackupRetentionPeriod:
    Description: 'The number of days to keep snapshots of the database.'
    Type: Number
    MinValue: 0
    MaxValue: 35
    Default: 7
  LogRetention:
    Type: Number
    Description: The length of time (in days) that you wish CloudWatch to retain the RDS logs for.
    Default: 60
    AllowedValues: [1,3,5,7,14,30,60,90,120,150,180,365,400,545,731,1827,3653] 

  PerformanceInsightsRetentionPeriod:
    Type: Number
    Description: The amount of time, in days, to retain Performance Insights data.  Valid values are 7 days (1 week) or 731 days (2 years).
    Default: 7
    AllowedValues: [7,731]
  EnhancedMonitoringInterval:
    Type: Number
    Description: The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance.  To disable colecting Enhanced Monitoring metrics you should specify 0.
    AllowedValues: [0,1,5,10,15,30,60]
    Default: 1
  costCenterParameter:
    Description: The value for the costCenter tag .
    Type: String
    
  uniqueIDParameter:
    Description: The value for the uniqueID tag
    Type: String
    
  dataClassificationParameter:
    Description: The value for the dataClassificationParameter tag
    Type: String
    AllowedValues: ['internal', 'public', 'confidential', 'restricted']
    Default: internal
  supportGroupParameter:
    Description: Enter a value only if this is Cloud Native (Containerize/Modernize) AWS account. Migrate accounts will use default values.
    Type: String
    Default: InfraHostingOps_PostgresDbSup
  changeGroupParameter:
    Description: Enter a value only if this is Cloud Native (Containerize/Modernize) AWS account. Migrate accounts will use default values.
    Type: String
    Default: InfraHostingOps_PostgresDbSup
  appCriticalityParameter:
    Type: String
    Description: The value for the appCritiality tag. MV - Misstion Vital/Tier0 MC- Mission Critical/Tier1  BC-Business Critical/Tier2 BE- Business Essential/Tier3 B-Business/Tier4
    AllowedValues: ['MV', 'MC', 'BC', 'BE', 'B']
    
  pciIndicator:
    Type: String
    Description: The value for the appCritiality tag.
    AllowedValues: ['true', 'false']
    
  soxIndicator:
    Type: String
    Description: The value for the appCritiality tag.
    AllowedValues: ['true', 'false']
    
  cuiIndicator:
    Type: String
    Description: The value for the appCritiality tag.
    AllowedValues: ['true', 'false']
    
  phiIndicator:
    Type: String
    Description: The value for the appCritiality tag.
    AllowedValues: ['true', 'false']
    
  appSupportEmail:
    Type: String
    Description: The Application support group email or mailbox
    Default: itxpostgresqlsupport@delta.com
  Environment:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /delta/account/environment:1
  EnableReadReplica:
    Type: String
    Description: To include ReadReplica this parameter should to be true
    AllowedValues: ['true', 'false']
    Default: false
  DeltaPrivatePrefixList:
    Description: For Migrate Accounts use one of the following. Prefix list ending with ...0820 is for Region1 and ....377f is for Region2  For Containerize will need input from VPC managed prefix lists.
    Type: String
    AllowedValues: ['pl-05a3c87e010904082','pl-0f41ed4a1130c377f']
  CreateAlarms:  
    Type: String
    Description: Only Applicable to Migrate accounts. Please set to True if you want to create alarms along with RDS Instance. For SI/Prod database it will created alarms irrespective parameter value. 
    AllowedValues: ['true', 'false']
    Default: false
  logMetricNamespace:
    Type: String
    Description: The name of log metric namespace. Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore.  
    Default: RdsLogMetrics
  DBLoadCpuAlarmTheshold:
    Type: Number
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Please enter threshold for DbLoadCpu. Ideally it shoule be set value = number of VCPUs allocated RDS instance based on Instance Type + 1. Refer https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html#Concepts.DBInstanceClass.Summary for more info.
    Default: 90
  FreeableMemoryAlarmTheshold:
    Type: Number
    Default: 100000000 
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Please enter threshold for free Space below which you would like to get Alarm. Default is set to 100MB=100000000  in bytes. 
  FreeStorageSpaceAlarmTheshold:
    Type: Number
    Default: 4000000000 
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Please enter threshold for free Space below which you would like to get Alarm. Default is set to 4 GB=4000000000   in bytes. 
  DatabaseConnectionsAlarmTheshold:
    Type: Number
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Please set this value to 95% of max connections set for instance. Max Connections value is set based on type of instance. Please refer documentation https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Limits.html#RDS_Limits.MaxConnections
    Default: 200
  MaxUsedTransactionIDsAlarmTheshold:
    Type: Number
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. Threshold for receiving early warning for transaction ID Wraparound. Default is 1000000000. Please decrease it if you want to be more aggressive. 
    Default: 1000000000
  SnowSNSTopic:
    Type: String
    Default: RDS-Alerts-All
    Description: Only Applicable to Migrate accounts. Non-Migrate accounts need to ignore. The SNS Topic for sending alarms to lambda to forward it further to snow. Default should work in all cases.  
  InvokePostLambda:
    Type: String
    Description: To call lambda after db instance creation
    AllowedValues: ['true', 'false']
    Default: false
  PostScriptBucketName:
    Type: String
    Description: The name of the s3 bucket, to fetch scripts
    Default: delta-postcfg-artifacts-us-east-1
  PostShellScriptPath:
    Type: String
    Description: The name of the shell script should be executed after RDS instance creation
    Default: database/scripts/post-postgress-script.sh
  PostSqlScriptPath:
    Type: String
    Description: The name of the SQL script should be executed after RDS instance creation
    Default: database/scripts/sql-postgres-script.sql
Mappings:
  AZMap:
    privatesubnet1aid:
      "az": "us-east-1a"
    privatesubnet2aid:
      "az": "us-east-1b"
    privatesubnet3aid:
      "az": "us-east-1c"
    datasubnet1aid:
      "az": "us-east-1a"
    datasubnet1bid:
      "az": "us-east-1f"
    datasubnet1cid:
      "az": "us-east-1c"
  EnvironmentMap:
    sandbox:
      "abbreviation": "l"
      "shortname": "sbx"
    development:
      "abbreviation": "d"
      "shortname": "dev"
    systems-integration:
      "abbreviation": "i"
      "shortname": "si"
    production:
      "abbreviation": "p"
      "shortname": "prd"
  RegionMap:
    us-east-1:
      "abbreviation": "e"
      "shortname": "NV"
    us-west-2:
      "abbreviation": "w"
      "shortname": "OR"

Conditions:
  EnhancedMonitoringDisabled: !Equals
    - !Ref EnhancedMonitoringInterval
    - 0
  PeformanceInsightsDisabled: !Equals
    - !Ref EnablePerformanceInsights
    - false
  EnhancedMonitoringEnabled: !Not
    - Condition: EnhancedMonitoringDisabled
  isGP2: !Equals
    - !Ref StorageType
    - 'gp2'
  isDevelopmentAccount: !Equals
    - !Ref Environment
    - development
  isSIorPRDAccount: !Not
    - Condition: isDevelopmentAccount
  isReadReplicaEnabled: !Equals
    - !Ref EnableReadReplica
    - 'true'
  isInvokePostLambda: !Equals
    - !Ref InvokePostLambda
    - 'true'

  #Following conditions ensure that we create alarms only for migrate accounts and not for containarize
  isCreateAlarm: !Equals
    - !Ref CreateAlarms
    - 'true'
  isDevMigrate: !Equals
    - !Ref AWS::AccountId
    - 108101204381
  isSiMigrate: !Equals
    - !Ref AWS::AccountId
    - 934408279768
  isPrdMigrate: !Equals
    - !Ref AWS::AccountId
    - 022190431571  
  isMigrate: !Or
    - Condition: isDevMigrate
    - Condition: isSiMigrate
    - Condition: isPrdMigrate
  isMigrateSiPrd: !And
    - Condition: isSIorPRDAccount
    - Condition: isMigrate 
  isMigrateDevCreateAlarm: !And
    - Condition: isDevMigrate
    - Condition: isCreateAlarm 
  isMigisSIorPRDAccountisCreateAlarm: !Or
    - Condition: isMigrateSiPrd
    - Condition: isMigrateDevCreateAlarm
  
  # dataClassification: internal or confidential a CMK to be generated for each RDSKey  ( rds-<blockcode>-CMK )
  # dataClassification: restricted a CloudHSM key to be created outside of CFT
  # dataClassification: public – Default AWS RDS key 

  InternaldataClassification: !Equals [!Ref dataClassificationParameter, 'internal']
  ConfidentialdataClassification: !Equals [!Ref dataClassificationParameter, 'confidential']
  PublicdataClassification: !Equals [!Ref dataClassificationParameter, 'public']
  RestricteddataClassification: !Equals [!Ref dataClassificationParameter, 'restricted']
  
Resources:
  # The following resource creates a cloudwatch log group where the postgresql logs for postgresql will be stored
  # This resource is required in order to specify the retention length that should be used by CloudWatch
  postgresqlCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub
        - /aws/rds/instance/pgs-${Blockcode}-${reg}-${DBNumber}/postgresql
        - {
           reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"]
          }
      RetentionInDays: !Ref LogRetention
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: confidential
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail 
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper     

  # The following resource creates a cloudwatch log group where the general logs for PostgreSQL will be stored
  # This resource is required in order to specify the retention length that should be used by CloudWatch
  upgradeCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub
        - /aws/rds/instance/pgs-${Blockcode}-${reg}-${DBNumber}/upgrade
        - {
           reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"]
          }
      RetentionInDays: !Ref LogRetention
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: confidential
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper 
   # The following resource creates a CMK to be used by Masteruser Secret as well as all database user secrets
  CMKforRDSUserSecrets:
    Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
    Properties:
      ProductName: "KMS CMK"
      ProvisionedProductName: !Sub 
        - pgs-${Blockcode}-${env}-${DBNumber}-dbuser-secret-mr-cmk
        - {
          env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
          }
      ProvisioningArtifactName: "2.0"
      ProvisioningParameters:
        - Key: KEYNAME
          Value: !Sub 
            - pgs-${Blockcode}-${env}-${DBNumber}-dbuser-secret-mr-cmk
            - {
              env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"],
              }
        - Key: KEYACCESS1
          Value: DeveloperPowerUserProvisioner
        - Key: KEY1PERMISSIONS
          Value: Both
        - Key: CROSSREGION
          Value: 'true'
        - Key: KEYACCESS2
          Value: DBAOperator
        - Key: KEY2PERMISSIONS
          Value: Decrypt
        - Key: SERVICENAME
          Value: ""
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: confidential
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
  # The CMK for RDS
  CMKforRDS:
    Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
    Properties:
      ProductName: "KMS CMK"
      ProvisionedProductName: !Sub 
        - pgs-${Blockcode}-${env}-${reg}-${DBNumber}-rds-cmk
        - {
          env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"],
          reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"]
          }
      ProvisioningArtifactName: "2.0"
      ProvisioningParameters:
        - Key: KEYNAME
          Value: !Sub 
            - pgs-${Blockcode}-${env}-${reg}-${DBNumber}-rds-cmk
            - {
              env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"],
              reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"]
             }
        - Key: KEYACCESS1
          Value: DeveloperPowerUserProvisioner
        - Key: KEY1PERMISSIONS
          Value: Both
        - Key: KEYACCESS2
          Value: DBAOperator
        - Key: KEY2PERMISSIONS
          Value: Decrypt
        - Key: SERVICENAME
          Value: ""
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
   # The resource below creates a new IAM role which is used for enahnced monitoring.
   # This role will only get created if the parameter for this stack specifies enabling enhanced monitoring       
  EnhancedMonitoringRole:
    Condition: EnhancedMonitoringEnabled
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub 'delegate-admin-postgres-monitoring-role-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - monitoring.rds.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      PermissionsBoundary:
        Fn::Sub: arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/cft-developer-boundary-policy

  # The resource below creates an EC2 Security Group which is then used when creating the RDS DB Instance.
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'Postgres EC2 Security Group for ${Blockcode}'
      SecurityGroupIngress:
      - IpProtocol: tcp
        Description: This ingress rule allows pl-05a3c87e010904082 to  communicate correctly over port 5432
        SourcePrefixListId: !Ref DeltaPrivatePrefixList
        FromPort: 5432
        ToPort: 5432
      VpcId: '{{resolve:ssm:/delta/vpc/vpcid:1}}'
      Tags:
        -
          Key: "Name"
          Value: !Sub
           - ${reg}-${env}-${os}${tier}-${Blockcode}
           -  {
              reg:  !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"],
              env:  !FindInMap [EnvironmentMap, !Ref Environment, "abbreviation"],
              os: 'L',     # L|W     L=LINUX,W=Windows
              tier: 'D'   # W|A|D   W=Web,A=App,D=Database
              }

  # The resource below creates a secret inside AWS Secrets Manager.  The secret contains a default username
  # and a generated password.  Secrets are encrypted using a KMS CMK Key.
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub
        - pgs-${Blockcode}-${env}-${DBNumber}-credentials
        - {
          env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
          }
      Description: !Sub 'This is the secret for the Postgres  RDS instance created for the DB created by CFT stack ${AWS::StackId}'
      KmsKeyId: !GetAtt CMKforRDSUserSecrets.Outputs.CMKARN
      GenerateSecretString:
        SecretStringTemplate: '{"username": "db_admin"}'
        GenerateStringKey: 'password'
        PasswordLength: 16
        ExcludeCharacters: '"@/\'
      Tags:
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: appCriticalityTier
          Value: !Ref appCriticalityParameter
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail     
  DBSecretPolicy:
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      BlockPublicPolicy: True
      SecretId: !Ref DBSecret
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
        
        - Resource: !Ref DBSecret
          Action:
            - secretsmanager:GetSecretValue
            - secretsmanager:PutSecretValue
            - secretsmanager:DescribeSecret
            - secretsmanager:ListSecrets
            - secretsmanager:TagResource
            - secretsmanager:UntagResource
            - secretsmanager:UpdateSecret
            - secretsmanager:DeleteSecret
            - secretsmanager:RemoveRegionsFromReplication  
            - secretsmanager:UpdateSecretVersionStage
            
          Effect: Allow
          Principal:
            AWS: 
              - !Sub arn:aws:iam::${AWS::AccountId}:role/DeveloperPowerUserProvisioner
              - !Sub arn:aws:iam::${AWS::AccountId}:role/DBAOperator
        - Resource: !Ref DBSecret
          Action:
            - secretsmanager:GetSecretValue
          Effect: Deny
          Principal: 
            AWS: '*'
          Condition:
            StringNotEquals: 
              aws:PrincipalArn:
                - !Sub arn:aws:iam::${AWS::AccountId}:role/DeveloperPowerUserProvisioner
                - !Sub arn:aws:iam::${AWS::AccountId}:role/DBAOperator
 # The resource below creates a DB Subnet Group that is used when creating the RDS DB Instance.
  # The DB Subnet Group utilizes the current accounts subnets which are specified inside SSM parameters.
  DBSubnetGroup:
    Properties:
      DBSubnetGroupDescription: DB subnet group
      SubnetIds:
        - !Sub '{{resolve:ssm:/delta/vpc/${RDSSubnetGroupSubnet1SSMParameter}:1}}'
        - !Sub '{{resolve:ssm:/delta/vpc/${RDSSubnetGroupSubnet2SSMParameter}:1}}'
        - !Sub '{{resolve:ssm:/delta/vpc/${RDSSubnetGroupSubnet3SSMParameter}:1}}'
    Type: "AWS::RDS::DBSubnetGroup"

  # The resource below creates an Postgres Parameter Group that is used when creating the RDS DB Instance.
  DBParameterGroup:
    Type: 'AWS::RDS::DBParameterGroup'
    Properties:
      Description: !Sub 'PostgreSQL Parameter Group for ${Blockcode}'
      Family: postgres14
      Tags:
        - Key: Name
          Value: delta-postgres-14
      Parameters:
        rds.force_ssl: 1
        log_min_duration_statement: 250
        ssl_min_protocol_version: TLSv1.2
        shared_preload_libraries: pg_stat_statements,pg_cron
        track_activity_query_size: 4096
        pg_stat_statements.track: ALL
        timezone: !Ref Timezone
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: engineVersion
          Value: !Sub "postgres-${EngineVersion}"
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: appCriticalityTier
          Value: !Ref appCriticalityParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail


  # The resource below creates a Postgres RDS instance and a single DB instance.
  # The resource below creates a PostgreSql RDS instance and a single DB instance.
  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      AllocatedStorage: !Ref DBAllocatedStorage
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      AvailabilityZone: !If
        - isDevelopmentAccount
        - !FindInMap [AZMap, !Ref RDSInstanceSubnetSSMParameter, "az"]
        - !Ref AWS::NoValue
      EnableIAMDatabaseAuthentication: true
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      DBInstanceClass: !Ref DBInstanceClass
      DBInstanceIdentifier: !Sub
        - pgs-${Blockcode}-${env}-${reg}-${DBNumber}
        - {
          reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"],
          env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
          }
      DBName: !Sub
        - pgs_${Blockcode}_${env}${DBNumber}_${DBNumberSuffix}
        - {
          env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
          }
      DBParameterGroupName: !Ref DBParameterGroup
      VPCSecurityGroups:
        - !Ref EC2SecurityGroup
      DBSubnetGroupName: !Ref DBSubnetGroup
      DeletionProtection: true
      CopyTagsToSnapshot: true
      EnableCloudwatchLogsExports:
       - postgresql
       - upgrade
      EnablePerformanceInsights: !Ref EnablePerformanceInsights
      Engine: postgres
      EngineVersion: !Ref EngineVersion
      Iops: !If [isGP2, !Ref AWS::NoValue, !Ref Iops]
      KmsKeyId: !GetAtt 'CMKforRDS.Outputs.CMKARN'
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecret, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref DBSecret, ':SecretString:password}}' ]]
      MaxAllocatedStorage: !Ref MaxAllocatedStorage
      MonitoringInterval: !If [EnhancedMonitoringDisabled, !Ref AWS::NoValue, !Ref EnhancedMonitoringInterval]
      MonitoringRoleArn: !If [EnhancedMonitoringDisabled, !Ref AWS::NoValue, !GetAtt EnhancedMonitoringRole.Arn]
      MultiAZ: !If [isDevelopmentAccount, false, true]
      PreferredBackupWindow: !Ref DefinedBackupWindow
      PreferredMaintenanceWindow: !Ref DefinedMaintenanceWindow
      PerformanceInsightsKMSKeyId: !GetAtt 'CMKforRDS.Outputs.CMKARN'
      PerformanceInsightsRetentionPeriod: !If [PeformanceInsightsDisabled, !Ref AWS::NoValue, !Ref PerformanceInsightsRetentionPeriod]
      StorageEncrypted: true
      StorageType: !Ref StorageType
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: engineVersion
          Value: !Sub "postgres-${EngineVersion}"
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: appCriticalityTier
          Value: !Ref appCriticalityParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail

  # The resource below creates a Postgres RDS Replica instance, if EnableReadReplica true
  ReplicaDBInstance:
    Condition: isReadReplicaEnabled
    Type: AWS::RDS::DBInstance
    Properties:
      SourceDBInstanceIdentifier: !Ref DBInstance
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBAllocatedStorage
      MaxAllocatedStorage: !Ref MaxAllocatedStorage
      StorageType: !Ref StorageType
      VPCSecurityGroups:
        - !Ref EC2SecurityGroup
      DBInstanceIdentifier: !Sub
        - pgs-replica-${Blockcode}-${env}-${DBNumber}
        - {
          env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
          }
      DBName: !Sub
        - pgs_replica_${Blockcode}_${env}${DBNumber}_${DBNumberSuffix}
        - {
          env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
          }
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: engineVersion
          Value: !Sub "mql${EngineVersion}"
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: appCriticalityTier
          Value: !Ref appCriticalityParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail

  # The resource below creates a AWS Secrets Manager Attachment.  This resource completes
  # the final link between a Secrets Manager secret and the associated database.
  SecretRDSInstanceAttachment:
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref DBSecret
      TargetId: !Ref DBInstance
      TargetType: AWS::RDS::DBInstance
  # The resource below creates a AWS Secrets Manager Attachment.  This resource completes
  # the final link between a Secrets Manager secret and the associated database.
  ReplicaSecretRDSInstanceAttachment:
    Condition: isReadReplicaEnabled
    Type: AWS::SecretsManager::SecretTargetAttachment
    Properties:
      SecretId: !Ref DBSecret
      TargetId: !Ref ReplicaDBInstance
      TargetType: AWS::RDS::DBInstance

  # The Route53 recordset below creates a friendly CName which points to the default RDS DNS endpoint.
  # Clients can use this friendly name when communicating with the RDS instance.
  RouteRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: '{{resolve:ssm:/delta/r53/hostedzoneid:1}}'
      Name: !Sub
         - "pgs-${Blockcode}-${reg}-${DBNumber}.${hostedzonedomain}"
         - {
          reg: !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"], 
          hostedzonedomain: '{{resolve:ssm:/delta/r53/hostedzonename:1}}'
          }
      Type: CNAME
      TTL: '300'
      ResourceRecords:
      - !GetAtt DBInstance.Endpoint.Address
    DependsOn: DBInstance
  # The Route53 recordset below creates a friendly CName which points to the default RDS DNS endpoint.
  # Clients can use this friendly name when communicating with the RDS Replica instance.
  ReplicaRouteRecordSet:
    Condition: isReadReplicaEnabled
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: '{{resolve:ssm:/delta/r53/hostedzoneid:1}}'
      Name: !Sub
        - "pgs-replica-${Blockcode}-${DBNumber}.${hostedzonedomain}"
        - {
          hostedzonedomain: '{{resolve:ssm:/delta/r53/hostedzonename:1}}'
          }
      Type: CNAME
      TTL: '300'
      ResourceRecords:
      - !GetAtt ReplicaDBInstance.Endpoint.Address
    DependsOn: ReplicaDBInstance

  ###### Monitoring ######
  #################### Metric Filters and Metrics #######################################
  # Following is list of all metric filters we need before creating alarms. 
  # Each Metric filter creates a metric which then can be utilized while createing alarms. 
  
  
  # This Metric filter will  search for pattern {FATAL - "password authentication failed for user" - "no pg_hba.conf entry for host"}  in
  # Postgres database error log and create corresponding metric
  FilterFatalPgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref DBInstance
        }
      FilterPattern:  FATAL - "password authentication failed for user" - "no pg_hba.conf entry for host"
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref DBInstance
          }

  # This Metric filter will search for pattern {No space left on device}  in Postgres error log and create corresponding metric
  FilterSpacePgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm  
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref DBInstance
        }
      FilterPattern:  No space left on device
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref DBInstance
          }

  # This Metric filter will  search for pattern {out of memory}  in Postgres error log and create corresponding metric
  FilterOomPgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref DBInstance
        }
      FilterPattern:  out of memory
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref DBInstance
          }

  # This Metric filter will  search for pattern {server terminated}  in Postgres error log and create corresponding metric
  FilterServertermPgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref DBInstance
        }
      FilterPattern:  server terminated
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref DBInstance
          }

  # This Metric filter will  search for pattern {PANIC}  in Postgres error log and create corresponding metric
  FilterPanicPgsRds:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::Logs::MetricFilter
    Properties: 
      LogGroupName: !Sub  
      - "/aws/rds/instance/${RdsDbInstance}/postgresql"
      - {
           RdsDbInstance: !Ref DBInstance
        }
      FilterPattern:  PANIC
      MetricTransformations: 
      - MetricValue: "1"
        MetricNamespace: !Ref logMetricNamespace
        MetricName: !Sub 
        - "dblogalerts-${RdsDbInstance}"
        - {
            RdsDbInstance: !Ref DBInstance
          }

  #################### END Metric Filters ################

  #################### Alarms  #######################################
 
  # Following alarm utilizes all metrics created above for posgres error logs based metric
  DbAlertAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres  # this topic points to DBA emails. 
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmDescription: Alarm which triggers when there are errors in database log
      AlarmName: !Sub 
      - "RDSdblogalerts-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      InsufficientDataActions: []
      MetricName: !Sub 
      - "dblogalerts-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }      
      Namespace: !Ref logMetricNamespace
      Period: 60
      Statistic: Sum
      Threshold: 0.0
      TreatMissingData: notBreaching

  # Following alarm utilizes cloudwatch DatabaseConnections metric and triggers when it is greater than threshold
  DatabaseConnectionsAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSDatabaseConnections-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 5
      MetricName: DatabaseConnections
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref DatabaseConnectionsAlarmTheshold
      TreatMissingData: ignore

  # Following alarm utilizes cloudwatch CPUUtilization metric and triggers when it is greater than threshold
  CPUUtilizationAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSCPUUtilization-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 5
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: 90
      TreatMissingData: ignore

  # Following alarm utilizes cloudwatch MaximumUsedTransactionIDs metric and triggers when it is greater than threshold
  MaxUsedTransactionIDsAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm
    Type: AWS::CloudWatch::Alarm     
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSMaxUsedTransactionIDs-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 1
      MetricName: MaximumUsedTransactionIDs
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref MaxUsedTransactionIDsAlarmTheshold
      TreatMissingData: ignore  

  # Following alarm utilizes cloudwatch ReadLatency metric and triggers when it is greater than threshold
  ReadLatencyAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      AlarmName: !Sub 
      - "RDSReadLatency-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }      
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 5
      MetricName: ReadLatency
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: 250
      TreatMissingData: ignore

  # Following alarm utilizes cloudwatch WriteLatency metric and triggers when it is greater than threshold
  WriteLatencyAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      AlarmName: !Sub 
      - "RDSWriteLatency-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }            
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 5
      MetricName: WriteLatency
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: 250
      TreatMissingData: ignore

  # DbLoadCpu is supposed to be less than 1 + NumCpus. This alarm triggers when Dbload is greater than NumCpus 
  DBLoadCpuAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSDBLoadCpu-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        } 
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 5
      MetricName: DBLoadCPU
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref DBLoadCpuAlarmTheshold
      TreatMissingData: ignore

  ## Following alarm utilizes cloudwatch FreeStorageSpace metric. This alarm triggers when FreeStorageSpace is less than 10% of maxallocated
  FreeStorageSpaceAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmName: !Sub 
      - "RDSFreeStorageSpace-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }       
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 5
      MetricName: FreeStorageSpace
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref FreeStorageSpaceAlarmTheshold  
      TreatMissingData: ignore

  # FreeableMemory is supposed to be greater than at least 100MB . This alarm triggers when FreeableMemory is less than Threshold
  FreeMemoryAlarm:
    Condition: isMigisSIorPRDAccountisCreateAlarm   
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
      - !Sub arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:RDS-Alerts-Postgres
      - !Sub 
        - arn:${AWS::Partition}:sns:${AWS::Region}:${AWS::AccountId}:${SnowTopic}
        - { SnowTopic : !Ref SnowSNSTopic }   
      AlarmDescription: Alarm to send alert when free memory is less than 100 MB 
      AlarmName: !Sub 
      - "RDSFreeMemory-${RdsDbInstance}"
      - {
            RdsDbInstance: !Ref DBInstance
        }       
      ComparisonOperator: LessThanOrEqualToThreshold
      DatapointsToAlarm: 3
      Dimensions:
      - Name: DBInstanceIdentifier
        Value: !Ref DBInstance
      EvaluationPeriods: 5
      MetricName: FreeableMemory
      Namespace: AWS/RDS
      Period: 60
      Statistic: Average
      Threshold: !Ref FreeableMemoryAlarmTheshold  
      TreatMissingData: ignore

  # This lambda invocation to run post script
  PostLambdaInvoke:
    Condition: isInvokePostLambda
    Type: Custom::DeployRequestLambdaInvoke
    Properties:
      ServiceToken: !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:rds-postgres-post-script
      # Schema defined below
      BucketName: !Ref PostScriptBucketName
      ScriptPath: !Ref PostShellScriptPath
      SecretArn: !Ref DBSecret
      SqlScriptPath: !Ref PostSqlScriptPath
      Env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
      DbNumber: !Ref DBNumber
      DbNumberSuffix: !Ref DBNumberSuffix
      Tags:
        - Key: changeGroup
          Value: !Ref changeGroupParameter
        - Key: costCenter
          Value: !Ref costCenterParameter
        - Key: dataClassification
          Value: !Ref dataClassificationParameter
        - Key: uniqueID
          Value: !Ref uniqueIDParameter
        - Key: supportGroup
          Value: !Ref supportGroupParameter
        - Key: engineVersion
          Value: !Sub "postgres-${EngineVersion}"
        - Key: blockCode
          Value:
            'Fn::Transform':
               Name: 'String'
               Parameters:
                 InputString: !Ref Blockcode
                 Operation: Upper
        - Key: appCriticalityTier
          Value: !Ref appCriticalityParameter
        - Key: InfraAppSupportEmail
          Value: ITxPostgresqlSupport@delta.com
        - Key: pciIndicator
          Value: !Ref pciIndicator
        - Key: soxIndicator
          Value: !Ref soxIndicator
        - Key: cuiIndicator
          Value: !Ref cuiIndicator
        - Key: phiIndicator
          Value: !Ref phiIndicator
        - Key: appSupportEmail
          Value: !Ref appSupportEmail
    DependsOn: DBInstance
  
  #################### End Cloudwatch Alarms  #######################################
    
Outputs:
  SecurityGroup:
    Description: The RDS Security Group ID
    Value: !Ref EC2SecurityGroup

  CName:
    Description: The RDS CNAME
    Value: !Ref RouteRecordSet
  ReplicaCName:
     Condition: isReadReplicaEnabled
     Description: The RDS CName
     Value: !Ref ReplicaRouteRecordSet

  DatabaseName:
    Description: Database Name
    Value: !Sub
      - pgs_${Blockcode}_${env}${DBNumber}_${DBNumberSuffix}
      - {
        env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
        }
  Port:
    Description: DB port Number
    Value: !GetAtt DBInstance.Endpoint.Port

  ReplicaDatabaseName:
    Condition: isReadReplicaEnabled
    Description: Replica Database Name
    Value: !Sub
      - pgs_replica_${Blockcode}_${env}${DBNumber}_${DBNumberSuffix}
      - {
        env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
        }
  ReplicaPort:
    Condition: isReadReplicaEnabled
    Description: DB port Number
    Value: !GetAtt DBInstance.Endpoint.Port   
      
  DatabaseInstanceName:
    Description: The RDS DB Instance Name
    Value: !Ref DBInstance

  CMKforDBuserSecretARN: 
    Value: !GetAtt 'CMKforRDS.Outputs.CMKARN'
    Description: This is the ARN for CMK used for encrypting DBuser secrets.

  JDBConnectionString:
    Description: JDBC connection string for the database
    Value: !Sub
      - jdbc:postgresql://${myendpoint}:${myport}/pgs_${Blockcode}_${env}${DBNumber}_${DBNumberSuffix}
      - {
        myendpoint: !Ref RouteRecordSet,
        myport: !GetAtt DBInstance.Endpoint.Port,
        env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
        }
    Export:
     Name:
      !Sub ${AWS::StackName}-JDBCConnectionString

  ReplicaJDBConnectionString:
    Condition: isReadReplicaEnabled
    Description: JDBC connection string for the database
    Value: !Sub
      - jdbc:postgresql://${myendpoint}:${myport}/pgs_${Blockcode}_${env}${DBNumber}_${DBNumberSuffix}
      - {
        myendpoint: !Ref ReplicaRouteRecordSet,
        myport: !GetAtt DBInstance.Endpoint.Port,
        env: !FindInMap [EnvironmentMap, !Ref Environment, "shortname"]
        }
    Export:
     Name:
      !Sub ${AWS::StackName}-ReplicaJDBCConnectionString

    
  
  