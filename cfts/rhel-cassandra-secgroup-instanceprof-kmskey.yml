AWSTemplateFormatVersion: 2010-09-09
Description: Template for creating an OpenJDK Launch Template and Instance last modified on May 25, 2021

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'General Parameters'
      Parameters:
      - ProjectName
      - backup
      - managedByTower
      - blockCode
      - firstblockCode
      - InstanceType
      - osVersion
      - Environment
      - EC2IAMInstanceProfileName
      - ServerType
      - DomainEnv
      - SubnetSelection
      - ApplicationNumber
      - entMonitoringProfile
      - dbEngine   
      - EBSCustomerManagedKmsKey   
    - Label:
        default: 'Patching Parameters'
      Parameters:
      - OSPatchDay
      - OSPatchHour
      - ProductPatchDay
      - ProductPatchHour
      - ProdOOBPatchGroup
    - Label:
        default: 'Filesystem Sizes'
      Parameters:
      - AppsVolumeSize
      - ProductsVolumeSize
      - LogsVolumeSize
      - Data0VolumeSize
      - Data1VolumeSize 
      - Data2VolumeSize           
      - DSEVolumeSize     
    - Label:
        default: 'OpenJDK Parameters'
      Parameters:
      - postConfigValue
      - infraAppVersion
      - appSupportEmail
      - infraAppSupportEmail      
    - Label:
        default: 'Sailpoint Integration Parameters'
      Parameters:
      - AdminPrimaryOwner
      - AdminSecondaryOwners
      - ApplicationPrimaryOwner
      - ApplicationSecondaryOwners
      - gdprIndicator
      - piiIndicator
    - Label:
        default: 'General Tagging Parameters'
      Parameters:
      - costCenter
      - uniqueId
      - dataClassification
      - supportGroup
      - changeGroup
      - drTier
      - pciIndicator
      - phiIndicator
      - cuiIndicator
      - soxIndicator

Parameters:

  managedByTower:
    Type: String
    AllowedValues: ['true', 'false']
    Default: 'false'

  infraAppVersion:
    Type: String
    Description: The product major version of OpenJDK to use
    AllowedValues: ['1.8.282.0','none','1.8','11']
    Default: 1.8.282.0
  blockCode:
    Type: String
    Description: Enter the block code for the project
    AllowedPattern: ^[a-zA-Z0-9]{10}$
    Default: OFRPOFPAAM

  firstblockCode:
    Type: String
    Description: A flag indicating whether or not this is the first stack which uses the blockcode or not
    AllowedValues: ['true', 'false']
    Default: "true"

  ProjectName:
    Type: String
    Description: Enter the name for the project
    Default: Retail-API

  Environment:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /delta/account/environment:1

  appSupportEmail:
    Type: String
    Description: Enter the application team support email
    Default: "RetailAPI@delta.com"

  infraAppSupportEmail:
    Type: String
    Description: Enter a tag value for application support group email ID
    Default: "ITxCassandraSupport@delta.com"  
      

  EC2IAMInstanceProfileName:
    Type: String
    Description: The Arn of the IAM Instance Profile that should be used when creating the EC2 Launch Template
    Default: DeltaMigrationEC2Role

  DomainEnv:
    Type: String
    Default: Delta.RL.Delta.com
    AllowedValues:
      - Delta.RL.Delta.com
      - VAD.VS.AIR4.com

  entMonitoringProfile:
    Type: String
    Default: BaseOSCustom
    AllowedValues:
      - NoMonitoring
      - BaseOS
      - BaseOSInfraApp
      - BaseOSAPM
      - BaseOSAPMInfraApp
      - BaseOSLoggingAnalytics
      - BaseOSAPMLoggingAnalytics
      - BaseOSAPMInfraAppLoggingAnalytics
      - BaseOSLogging
      - BaseOSCustom

  AdminPrimaryOwner:
    Type: String
    Description: Primary owner user id (6 digit) that should be set on the Admin AD group which sailpoint creates
    Default: "896944"
  AdminSecondaryOwners:
    Type: String
    Description: Comma delimited list of secondary owner user ids (6 digit) that should be set on the Admin AD group which sailpoint creates
    Default: "411967"
  gdprIndicator:
    Type: String
    Description: Refers to the general data protection regulation category of information
    AllowedValues: ['true', 'false']
    Default: 'false'

  piiIndicator:
    Type: String
    Description: Refers to any personal identifiable information related to an individual.
    AllowedValues: ['true', 'false']
    Default: 'false'

  postConfigValue:
    Type: String
    Description: The value that the postConfig ec2 tag should be set to in order to complete the postConfig script
    # AllowedPattern: ['^RHEL-OPENJDK$' , 'RHEL-OPENJDK-COMPLETE']
    Default: RHEL-OPENJDK

  # GENERAL TAGGING PARAMETERS
  costCenter:
    Description: The value for the costCenter tag.
    AllowedPattern: ^C[0-9]{4}ATG$
    Type: String
    Default: "C8660ATG"    
  uniqueId:
    Description: The unique ideentifier for the instance.
    AllowedPattern: ^(D|A)[0-9]{7}$
    Type: String
    Default: "A0020730"    
  dataClassification:
    Description: The value for the dataClassificationParameter tag
    Type: String
    AllowedValues: ['internal', 'public', 'confidential', 'restricted']
    Default: confidential
  supportGroup:
    Description: The value for the supportGroup tag.
    AllowedPattern: ^[A-Za-z0-9_-]+$
    Type: String
    Default: RevMgmt_RetailAPI    
  changeGroup:
    Description: Identifies the ServiceNow group of the application owner who owns the AWS resource. The tag value needs to be an exact match of the ServiceNow group.
    AllowedPattern: ^[A-Za-z0-9_ -]+$
    Type: String
    Default: RevMgmt_RetailAPI    
  drTier:
    Type: String
    Description: A tier designation, which defines the chronological order of recovery for an application during an IT Disaster event.
    AllowedValues: ['mission vital','mission critical','business critical','business essential','business']
    Default: 'business critical'
  phiIndicator:
    Type: String
    Description: Refers to any health information (medical and insurance) related to an individual.
    AllowedValues: ['true', 'false']
    Default: 'false'
  pciIndicator:
    Type: String
    Description: Refers to the category used for credit cardholder data and sensitive authentication data.
    AllowedValues: ['true', 'false']
    Default: 'false'
  soxIndicator:
    Type: String
    Description: Refers to any information that has a direct and material impact on Deltaâ€™s financial reporting.
    AllowedValues: ['true', 'false']
    Default: 'false'
  cuiIndicator:
    Type: String
    Description: Refers to the category of unclassified information within the U.S. Federal government. Confidential.
    AllowedValues: ['true', 'false']
    Default: 'false'

  ApplicationNumber:
    Type: String
    Description: The 2 digit Application Number.  This number will be used when creating the Application Alias DNS.
    AllowedPattern: ^[0-9]{2}$
    Default: '01'

Mappings:
  ProductMap:
    "was":
      "abbreviation": "w"
    "apache":
      "abbreviation": "a"
    "eap":
      "abbreviation": "j"
    "openjdk":
      "abbreviation": "o"
    "tomcat":
      "abbreviation": "t"

  DataClassificationMap:
    "internal":
      "SailpointDataClassification": "None"
    "public":
      "SailpointDataClassification": "None"
    "confidential":
      "SailpointDataClassification": "Confidential"
    "restricted":
      "SailpointDataClassification": "Restricted"
  EnvironmentMap:
    sandbox:
      "singleAbbreviation": "l"
      "abbreviation": "lab"
      "patchabbreviation": "lab"
      "mainCategory": "nonprd"
      "oobPatchGroup": "dev-day-1-1800"
    development:
      "singleAbbreviation": "d"
      "abbreviation": "dvl"
      "patchabbreviation": "dev"
      "mainCategory": "nonprd"
      "oobPatchGroup": "dev-day-1-1800"
    systems-integration:
      "singleAbbreviation": "i"
      "abbreviation": "int"
      "patchabbreviation": "si"
      "mainCategory": "nonprd"
      "oobPatchGroup": "si-day-2-1800"
    production:
      "singleAbbreviation": "p"
      "abbreviation": "prd"
      "patchabbreviation": "prd"
      "mainCategory": "prd"
      "oobPatchGroup": "not applicable"
  RegionMap:
    us-east-1:
      "abbreviation": "NV"
    us-west-2:
      "abbreviation": "OR"

Conditions:
  IsFirstBlockCode: !Equals
    - !Ref firstblockCode
    - 'true'
  IsManagedByTower: !Equals
    - !Ref managedByTower
    - 'true'
  IsManagedByPrdTower: !And
    - !Equals ["production", !Ref Environment]
    - !Equals ['true', !Ref managedByTower]
  IsManagedByNonPrdTower: !And
    - !Not [!Equals ["production", !Ref Environment]]
    - !Equals ['true', !Ref managedByTower]
  IsDevelopmentAccount: !Equals
    - !Ref Environment
    - 'development'
  IsSystemsIntegrationAccount: !Equals
    - !Ref Environment
    - 'systems-integration'
  IsProductionAccount: !Equals
    - !Ref Environment
    - 'production'
  isBaseApplication: !Equals
    - !Ref ApplicationNumber
    - '01'

Resources:
#EC2
  OpenJDKSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Security group for all ${blockCode} EC2s"
      GroupName: !Sub
        - ${reg}-${env}-${os}-${tier}-${blockCode}-${ApplicationNumber}
        -  {
          reg:  !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"],
          env:  !If [IsProductionAccount, 'P', !If [IsSystemsIntegrationAccount, 'S', 'D']],
          os:   'L',  #LINUX
          tier: 'A'  #Application
          }
      Tags:
      -
        Key: "Name"
        Value: !Sub
          - ${reg}-${env}-${os}-${tier}-${blockCode}-${ApplicationNumber}
          -  {
            reg:  !FindInMap [RegionMap, !Ref "AWS::Region", "abbreviation"],
            env:  !If [IsProductionAccount, 'P', !If [IsSystemsIntegrationAccount, 'S', 'D']],
            os:   'L',  #Linux
            tier: 'A'   #Application
            }
      -
        Key: "blockCode"
        Value: !Ref blockCode
      -
        Key: "Environment"
        Value: !Ref Environment
      VpcId: '{{resolve:ssm:/delta/vpc/vpcid:1}}'

      SecurityGroupIngress:
      #ADD YOUR APPLICATION SPECIFIC INGRESS RULES HERE
        -
          CidrIp: 10.37.10.24/32
          FromPort: 5598
          IpProtocol: "tcp"
          ToPort: 5598
        -
          CidrIp: 10.37.10.24/32
          FromPort: 5599
          IpProtocol: "tcp"
          ToPort: 5599
        -
          CidrIp: 10.37.10.24/32
          FromPort: 7000
          IpProtocol: "tcp"
          ToPort: 7000
        -
          CidrIp: 10.37.10.24/32
          FromPort: 7001
          IpProtocol: "tcp"
          ToPort: 7001
        -
          CidrIp: 10.37.10.24/32
          FromPort: 7199
          IpProtocol: "tcp"
          ToPort: 7199
        -
          CidrIp: 10.37.10.24/32
          FromPort: 7077
          IpProtocol: "tcp"
          ToPort: 7077
        -
          CidrIp: 10.37.10.24/32
          FromPort: 8609
          IpProtocol: "tcp"
          ToPort: 8609
        -
          CidrIp: 10.37.10.24/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042
        -
          CidrIp: 10.37.10.24/32
          FromPort: 9142
          IpProtocol: "tcp"
          ToPort: 9142
        -
          CidrIp: 10.37.10.24/32
          FromPort: 10000
          IpProtocol: "tcp"
          ToPort: 10000  
        -
          CidrIp: 10.37.10.43/32
          FromPort: 5598
          IpProtocol: "tcp"
          ToPort: 5598
        -
          CidrIp: 10.37.10.43/32
          FromPort: 5599
          IpProtocol: "tcp"
          ToPort: 5599
        -
          CidrIp: 10.37.10.43/32
          FromPort: 7000
          IpProtocol: "tcp"
          ToPort: 7000
        -
          CidrIp: 10.37.10.43/32
          FromPort: 7001
          IpProtocol: "tcp"
          ToPort: 7001
        -
          CidrIp: 10.37.10.43/32
          FromPort: 7199
          IpProtocol: "tcp"
          ToPort: 7199
        -
          CidrIp: 10.37.10.43/32
          FromPort: 7077
          IpProtocol: "tcp"
          ToPort: 7077
        -
          CidrIp: 10.37.10.43/32
          FromPort: 8609
          IpProtocol: "tcp"
          ToPort: 8609
        -
          CidrIp: 10.37.10.43/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042
        -
          CidrIp: 10.37.10.43/32
          FromPort: 9142
          IpProtocol: "tcp"
          ToPort: 9142
        -
          CidrIp: 10.37.10.43/32
          FromPort: 10000
          IpProtocol: "tcp"
          ToPort: 10000  
        -
          CidrIp: 10.37.10.18/32
          FromPort: 5598
          IpProtocol: "tcp"
          ToPort: 5598
        -
          CidrIp: 10.37.10.18/32
          FromPort: 5599
          IpProtocol: "tcp"
          ToPort: 5599
        -
          CidrIp: 10.37.10.18/32
          FromPort: 7000
          IpProtocol: "tcp"
          ToPort: 7000
        -
          CidrIp: 10.37.10.18/32
          FromPort: 7001
          IpProtocol: "tcp"
          ToPort: 7001
        -
          CidrIp: 10.37.10.18/32
          FromPort: 7199
          IpProtocol: "tcp"
          ToPort: 7199
        -
          CidrIp: 10.37.10.18/32
          FromPort: 7077
          IpProtocol: "tcp"
          ToPort: 7077
        -
          CidrIp: 10.37.10.18/32
          FromPort: 8609
          IpProtocol: "tcp"
          ToPort: 8609
        -
          CidrIp: 10.37.10.18/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042
        -
          CidrIp: 10.37.10.18/32
          FromPort: 9142
          IpProtocol: "tcp"
          ToPort: 9142
        -
          CidrIp: 10.37.10.18/32
          FromPort: 10000
          IpProtocol: "tcp"
          ToPort: 10000  
        -
          CidrIp: 10.46.95.49/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042    
        -
          CidrIp: 10.46.95.49/32
          FromPort: 61621
          IpProtocol: "tcp"
          ToPort: 61621
        -
          CidrIp: 10.46.95.49/32
          FromPort: 7080
          IpProtocol: "tcp"
          ToPort: 7080
        -
          CidrIp: 10.46.95.49/32
          FromPort: 8888
          IpProtocol: "tcp"
          ToPort: 8888  
        -
          CidrIp: 10.46.95.49/32
          FromPort: 8443
          IpProtocol: "tcp"
          ToPort: 8443
        -
          CidrIp: 10.46.95.49/32
          FromPort: 61620
          IpProtocol: "tcp"
          ToPort: 61620
        -
          CidrIp: 10.37.10.247/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042   
        -
          CidrIp: 10.37.10.246/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042        
        -
          CidrIp: 10.37.10.248/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042     
        -
          CidrIp: 10.37.76.25/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042    
        -
          CidrIp: 10.37.76.26/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042  
        -
          CidrIp: 10.37.76.27/32
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042
        -
          CidrIp: 100.68.42.0/24
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042       
        -
          CidrIp: 100.68.42.0/24
          FromPort: 9142
          IpProtocol: "tcp"
          ToPort: 9142 
        -
          CidrIp: 100.68.42.0/24
          FromPort: 9160
          IpProtocol: "tcp"
          ToPort: 9160 
        -
          CidrIp: 100.76.42.0/24
          FromPort: 9042
          IpProtocol: "tcp"
          ToPort: 9042       
        -
          CidrIp: 100.76.42.0/24
          FromPort: 9142
          IpProtocol: "tcp"
          ToPort: 9142 
        -
          CidrIp: 100.76.42.0/24
          FromPort: 9160
          IpProtocol: "tcp"
          ToPort: 9160    

          
  EC2RuntimeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Join [ "-", ['delegate-admin', !Ref blockCode]]
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - 'ec2.amazonaws.com'
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: "SsmAllowSendCommandViaBlockCode"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - ssm:SendCommand
              Resource:
                - !Sub "arn:aws:ec2:*:${AWS::AccountId}:instance/*"
                - !Sub "arn:aws:ssm:*:*:document/*"
              Condition:
                ForAllValues:StringEquals:
                  aws:ResourceTag/blockCode: !Ref blockCode
        - PolicyName: "SsmAllowPolicyForRuntimeEC2"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - ssm:DescribeAssociation
              - ssm:GetDeployablePatchSnapshotForInstance
              - ssm:GetDocument
              - ssm:DescribeDocument
              - ssm:GetManifest
              - ssm:GetParameter
              - ssm:GetParameters
              - ssm:ListAssociations
              - ssm:ListInstanceAssociations
              - ssm:PutInventory
              - ssm:PutComplianceItems
              - ssm:PutConfigurePackageResult
              - ssm:UpdateAssociationStatus
              - ssm:UpdateInstanceAssociationStatus
              - ssm:UpdateInstanceInformation
              Resource: "*"
            - Effect: Allow
              Action:
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
              Resource: "*"
            - Effect: Allow
              Action:
              - ec2messages:AcknowledgeMessage
              - ec2messages:DeleteMessage
              - ec2messages:FailMessage
              - ec2messages:GetEndpoint
              - ec2messages:GetMessages
              - ec2messages:SendReply
              Resource: "*"
            - Effect: Allow
              Action:
              - cloudwatch:PutMetricData
              Resource: "*"
            - Effect: Allow
              Action:
              - ec2:Describe*
              - ec2:*Tags
              Resource: "*"
            - Effect: Allow
              Action:
              - ds:CreateComputer
              - ds:DescribeDirectories
              Resource: "*"
            - Effect: Allow
              Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
              - logs:PutLogEvents
              Resource: "*"
            - Effect: Allow
              Action:
              - s3:GetBucketLocation
              - s3:PutObject
              - s3:GetObject
              - s3:GetEncryptionConfiguration
              - s3:AbortMultipartUpload
              - s3:ListMultipartUploadParts
              - s3:ListBucket
              - s3:ListBucketMultipartUploads
              - s3:*Tagging
              Resource: "*"
            - Effect: Allow
              Action:
              - acm:ListCertificates
              - acm:ExportCertificate
              Resource: "*"
            - Effect: Allow
              Action:
              - sns:Publish
              Resource: !Sub "arn:aws:sns:${AWS::Region}:*:*"
        - PolicyName: "SsmDenyPolicyForRuntimeEC2"
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Deny
              Action:
              - ssm:GetParameter
              - ssm:GetParameters
              Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/delta/ec2/restricted/*"
            - Effect: Deny
              Action:
              - iam:*InstanceProfile
              - ec2:*InstanceProfileAssociations
              Resource: "*"
      PermissionsBoundary: !Join [":", ["arn:aws:iam:", !Ref AWS::AccountId, "policy/cft-systemBuilder-boundary-policy"] ]
  EC2InstanceProfile:
    Condition: IsFirstBlockCode
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      InstanceProfileName: !Join [ "-", ['delegate-admin', !Ref blockCode, 'instance-profile']]
      Path: /
      Roles:
        -
          Ref: EC2RuntimeRole
          
  CMKForDatabaseVolumeEncryption:
        Condition: IsFirstBlockCode
        Type: AWS::ServiceCatalog::CloudFormationProvisionedProduct
        Properties:
          ProductName: "KMS CMK"
          ProvisionedProductName: 
            !Join [
              "-",
              [
                "KMS",
                !Ref blockCode,
                !If [IsProductionAccount, 'P', !If [IsSystemsIntegrationAccount, 'S', 'D']],
                "cassandra",
                "cmk",
              ],
            ]          
          ProvisioningArtifactName: "1.8"
          ProvisioningParameters: 
            - Key: KEYNAME
              Value:          
                !Join [
                  "-",
                  [
                    "KMS",
                    !Ref blockCode,
                    !If [IsProductionAccount, 'P', !If [IsSystemsIntegrationAccount, 'S', 'D']],
                    "cassandra",
                    "cmk",
                 ],
               ]          
            - Key: KEYACCESS1
              Value: SystemBuilderProvisioner
            - Key: KEY1PERMISSIONS
              Value: Both
            - Key: KEYACCESS2
              Value: !Sub delegate-admin-${blockCode}
            - Key: KEY2PERMISSIONS
              Value: Decrypt
            - Key: KEYACCESS3
              Value: DBAOperator
            - Key: KEY3PERMISSIONS
              Value: Decrypt
            - Key: SERVICENAME
              Value: ""
          Tags:
            - Key: changeGroup
              Value: !Ref changeGroup
            - Key: costCenter
              Value: !Ref costCenter
            - Key: dataClassification
              Value: !Ref dataClassification
            - Key: UniqueID
              Value: !Ref uniqueId
            - Key: supportGroup
              Value: !Ref supportGroup
            - Key: AccountID
              Value: !Sub ${AWS::AccountId}
            - Key: blockCode
              Value: !Ref blockCode

  



Outputs:
  securityGroup:
    Description: Id of the VPC Endpoint for use with APIs
    Value: !Ref OpenJDKSecurityGroup
    Export:
      Name: !Join [ "-", ['OpenJDK-secrurityGroup', !Ref blockCode]]
  