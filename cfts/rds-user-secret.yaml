AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::SecretsManager-2020-07-23
Description: 'State: Database Secret'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
    - Label:
        default: 'Secret Settings'
      Parameters:
      - SecretName
      - DeletionProtection
    - Label:
        default: 'DB Password Settings'
      Parameters:
      - DBMasterUsername
      - DBPassword
Parameters:
  EncryptionKmsKeyId:
    Description: >-
      KMS Key Id to encrypt secret in Secrets Manager 
      (If you do not specify this value, then Secrets Manager defaults to the AWS account CMK, aws/secretsmanager).
      However, according Delta policy on the protection of Secrets, all secrets must be protected with a Customer Master Key
      (CMK). AWS Default KMS Keys may not be accepted to encrypt secrets. More information may be found at https://docs.aws.delta.com/secretsmanager.html.
    Type: String
    Default: ''
  EnvironmentType:
    Type: String 
    Description: (Required) The Environment to which the secret is created.
    Default: ''
  SecretDirectory:
    Type: String 
    Description: (Required) The secrets root directory.
    Default: ''
  SecretName:
    Description: >-
      Name of the secret. Secret names must be Hierarchal for scalabilty, for example (prod/Databases/MySQL),
      You must also provide values for (EnvironmentType and SecretDirectory) parameters to complete the path of the 
      secret name.
    Type: String
    Default: ''
  DBMasterUsername:
    Description: 'The master user name for a DB instance.'
    Type: 'String'
    Default: ''
  DBPassword:
    Description: >-
      Optional password to be used in the secret. Use this if you need to preset the password otherwise a random password is generated.
      You may only provide value for this parameter for testing purposes only. Otherwise, leave this blank.
    Type: 'String'
    Default: ''
    NoEcho: true
  MasterArn:
    Type: String
    Description: >-
      (Required)Provide Amazon Resource Name (Arn) of the Master Secret. This value must be
      provisded for all User secrets.
    Default: ''
  DeletionProtection:
    Description: Prevent Deletion via Resource Policy
    Type: 'String'
    Default: 'disabled'
    AllowedValues:
    - 'enabled'
    - 'disabled'
Conditions:
  IsKmsKey: !Not [!Equals [!Ref EncryptionKmsKeyId, '']]
  IsPassword: !Not [!Equals [!Ref DBPassword, '']]
  IsDeletionProtection: !Equals [!Ref DeletionProtection, 'enabled']
Resources:
  UserSecret:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Join
      - '/'
      - - ''
        - !Ref EnvironmentType
        - !Ref SecretDirectory
        - !Ref SecretName
      KmsKeyId: 
        !If 
        - IsKmsKey 
        - !Ref EncryptionKmsKeyId
        - !Ref AWS::NoValue
      GenerateSecretString:
        !If
        - IsPassword
        - !Ref AWS::NoValue
        - SecretStringTemplate: !Sub '{"username": "${DBMasterUsername}", "masterarn": "${MasterArn}"}'
          GenerateStringKey: "password"
          PasswordLength: 30
          ExcludeCharacters: '"@/\'
      SecretString:
        !If
        - IsPassword
        - !Sub '{"username":"${DBMasterUsername}","password":"${DBPassword}"}'
        - !Ref 'AWS::NoValue'
      Tags: # Mandatory tags
        - 
          Key: CostCenter
          Value: '' 
        - 
          Key: IServerEntry
          Value: ''
        - 
          Key: Owner
          Value: !Sub ${AWS::AccountId}
        - 
          Key: Environment
          Value: !Ref EnvironmentType 
        - 
          Key: DataClassification
          Value: ''
  SecretResourcePolicy:
    Condition: IsDeletionProtection
    Type: 'AWS::SecretsManager::ResourcePolicy'
    Properties:
      SecretId: !Ref UserSecret
      ResourcePolicy:
        Version: '2012-10-17'
        Statement:
        - Resource: '*'
          Action: 'secretsmanager:DeleteSecret'
          Effect: Deny
          Principal:
            AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
Outputs:
  TemplateID:
    Description: 'template id.'
    Value: 'state/secretsmanager-secret'
  TemplateVersion:
    Description: 'template version.'
    Value: '__VERSION__'
  StackName:
    Description: 'Stack name.'
    Value: !Sub '${AWS::StackName}'
  SecretArn:
    Description: 'Secret Arn'
    Value: !Ref UserSecret
    Export:
      Name: !Sub '${AWS::StackName}-SecretArn'